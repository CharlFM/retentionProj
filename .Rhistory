finDat <- finDat %>%
mutate(earlyRPLFlag = dplyr::if_else(is.na(Early_RPL), "no_notification", "notified")) %>%
select(-Early_RPL)
finDat_test <- finDat_test %>%
mutate(earlyRPLFlag = dplyr::if_else(is.na(Early_RPL), "no_notification", "notified")) %>%
select(-Early_RPL)
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat <- finDat %>%
mutate(latestRPLFlag = dplyr::if_else(is.na(Latest_RPL), "no_notification", "notified")) %>%
select(-Latest_RPL)
finDat_test <- finDat_test %>%
mutate(latestRPLFlag = dplyr::if_else(is.na(Latest_RPL), "no_notification", "notified")) %>%
select(-Latest_RPL)
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(Cancelled_Pax = as.numeric(Cancelled_Pax))
finDat_test <- finDat_test %>% mutate(Cancelled_Pax = as.numeric(Cancelled_Pax))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(Total_Discount_Pax = as.numeric(Total_Discount_Pax))
finDat_test <- finDat_test %>% mutate(Total_Discount_Pax = as.numeric(Total_Discount_Pax))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat <- finDat %>%
mutate(initDayOfWeek = day.abb[lubridate::month(lubridate::mdy(Initial_System_Date))],
initSeason    = getSeason(lubridate::mdy(Initial_System_Date))) %>%
select(-Initial_System_Date)
finDat_test <- finDat_test %>%
mutate(initDayOfWeek = day.abb[lubridate::month(lubridate::mdy(Initial_System_Date))],
initSeason    = getSeason(lubridate::mdy(Initial_System_Date))) %>%
select(-Initial_System_Date)
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(SPR_Product_Type = if_else(SPR_Product_Type %in% c("CA History", "East Coast", "Science"), SPR_Product_Type, "other"))
finDat_test <- finDat_test %>% mutate(SPR_Product_Type = if_else(SPR_Product_Type %in% c("CA History", "East Coast", "Science"), SPR_Product_Type, "other"))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(FPP = as.numeric(FPP))
finDat_test <- finDat_test %>% mutate(FPP = as.numeric(FPP))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(Total_Pax = as.numeric(Total_Pax))
finDat_test <- finDat_test %>% mutate(Total_Pax = as.numeric(Total_Pax))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(totPaxDiff = FPP + Total_Discount_Pax - Total_Pax)
finDat_test <- finDat_test %>% mutate(totPaxDiff = FPP + Total_Discount_Pax - Total_Pax)
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% select(-DepartureMonth)
finDat_test <- finDat_test %>% select(-DepartureMonth)
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(GroupGradeTypeLow = ifelse(GroupGradeTypeLow %in% c(NA, "NA", "Undefined"), NA, GroupGradeTypeLow))
finDat_test <- finDat_test %>% mutate(GroupGradeTypeLow = ifelse(GroupGradeTypeLow %in% c(NA, "NA", "Undefined"), NA, GroupGradeTypeLow))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(GroupGradeTypeHigh = ifelse(GroupGradeTypeHigh %in% c(NA, "NA", "Undefined"), NA, GroupGradeTypeHigh))
finDat_test <- finDat_test %>% mutate(GroupGradeTypeHigh = ifelse(GroupGradeTypeHigh %in% c(NA, "NA", "Undefined"), NA, GroupGradeTypeHigh))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(GroupGradeType = ifelse(GroupGradeType == "Undefined->Undefined", NA, GroupGradeType))
finDat_test <- finDat_test %>% mutate(GroupGradeType = ifelse(GroupGradeType == "Undefined->Undefined", NA, GroupGradeType))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat <- finDat %>% mutate(Retained       = as.numeric(Retained),
Retained_class = if_else(Retained == 0, "no", "yes"))
finDat_test <- finDat_test %>% mutate(Retained       = as.numeric(Retained),
Retained_class = if_else(Retained == 0, "no", "yes"))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(Poverty_Code = ifelse(Poverty_Code %in% c("A", "B", "C", "D"), Poverty_Code, "other"))
finDat_test <- finDat_test %>% mutate(Poverty_Code = ifelse(Poverty_Code %in% c("A", "B", "C", "D"), Poverty_Code, "other"))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(Region = ifelse(Region %in% c("Southern California", "Northern California", "Pacific Northwest", "Houston", "Dallas"), Region, "other"))
finDat_test <- finDat_test %>% mutate(Region = ifelse(Region %in% c("Southern California", "Northern California", "Pacific Northwest", "Houston", "Dallas"), Region, "other"))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(CRM_Segment = ifelse(CRM_Segment %in% c("1", "2", "4", "5", "6", "7", "8", "9", "10", "11"), CRM_Segment, "other"))
finDat_test <- finDat_test %>% mutate(CRM_Segment = ifelse(CRM_Segment %in% c("1", "2", "4", "5", "6", "7", "8", "9", "10", "11"), CRM_Segment, "other"))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(Parent_Meeting_Flag = if_else(is.na(Parent_Meeting_Flag), "1", Parent_Meeting_Flag))
finDat_test <- finDat_test %>% mutate(Parent_Meeting_Flag = if_else(is.na(Parent_Meeting_Flag), "1", Parent_Meeting_Flag))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat <- finDat %>%
mutate(MDR_Low_Grade = ifelse(MDR_Low_Grade == "K",  "0", MDR_Low_Grade),
MDR_Low_Grade = ifelse(MDR_Low_Grade == "PK", "-1", MDR_Low_Grade) %>% as.numeric())
finDat_test <- finDat_test %>%
mutate(MDR_Low_Grade = ifelse(MDR_Low_Grade == "K",  "0", MDR_Low_Grade),
MDR_Low_Grade = ifelse(MDR_Low_Grade == "PK", "-1", MDR_Low_Grade) %>% as.numeric())
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat <- finDat %>%
mutate(MDR_High_Grade = ifelse(MDR_High_Grade == "K",  "0", MDR_High_Grade),
MDR_High_Grade = ifelse(MDR_High_Grade == "PK", "-1", MDR_High_Grade) %>% as.numeric())
finDat_test <- finDat_test %>%
mutate(MDR_High_Grade = ifelse(MDR_High_Grade == "K",  "0", MDR_High_Grade),
MDR_High_Grade = ifelse(MDR_High_Grade == "PK", "-1", MDR_High_Grade) %>% as.numeric())
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(Total_School_Enrollment = as.numeric(Total_School_Enrollment))
finDat_test <- finDat_test %>% mutate(Total_School_Enrollment = as.numeric(Total_School_Enrollment))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(FPP_to_School_enrollment = gsub(FPP_to_School_enrollment, pattern = ",", replacement = ".") %>% as.numeric())
finDat_test <- finDat_test %>% mutate(FPP_to_School_enrollment = gsub(FPP_to_School_enrollment, pattern = ",", replacement = ".") %>% as.numeric())
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(FPP_to_School_enrollment = if_else(is.na(FPP_to_School_enrollment) & Total_School_Enrollment > 0 & !is.na(Total_School_Enrollment), FPP/Total_School_Enrollment, FPP_to_School_enrollment))
finDat_test <- finDat_test %>% mutate(FPP_to_School_enrollment = if_else(is.na(FPP_to_School_enrollment) & Total_School_Enrollment > 0 & !is.na(Total_School_Enrollment), FPP/Total_School_Enrollment, FPP_to_School_enrollment))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat <- finDat %>% mutate(Income_Level = ifelse(Income_Level %in% c("P", "P1", "P3", "P4", "P5"), "P", Income_Level),
Income_Level = ifelse(Income_Level %in% c("0", "NA", NA, "Z"), "other", Income_Level))
finDat_test <- finDat_test %>% mutate(Income_Level = ifelse(Income_Level %in% c("P", "P1", "P3", "P4", "P5"), "P", Income_Level),
Income_Level = ifelse(Income_Level %in% c("0", "NA", NA, "Z"), "other", Income_Level))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(SPR_New_Existing = if_else(is.na(SPR_New_Existing), "1", SPR_New_Existing))
finDat_test <- finDat_test %>% mutate(SPR_New_Existing = if_else(is.na(SPR_New_Existing), "1", SPR_New_Existing))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(NumberOfMeetingswithParents = as.numeric(NumberOfMeetingswithParents))
finDat_test <- finDat_test %>% mutate(NumberOfMeetingswithParents = as.numeric(NumberOfMeetingswithParents))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat %>% select(-FirstMeeting)
finDat_test <- finDat_test %>% select(-FirstMeeting)
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat <- finDat %>%
mutate(LastMeetingSeason  = getSeason(lubridate::mdy(LastMeeting)),
LastMeetingWeekDay = lubridate::wday(lubridate::mdy(LastMeeting)) %>% as.character(),
LastMeetingWeekDay = ifelse(is.na(LastMeetingWeekDay), "other", LastMeetingWeekDay)) %>%
select(-LastMeeting)
finDat_test <- finDat_test %>%
mutate(LastMeetingSeason  = getSeason(lubridate::mdy(LastMeeting)),
LastMeetingWeekDay = lubridate::wday(lubridate::mdy(LastMeeting)) %>% as.character(),
LastMeetingWeekDay = ifelse(is.na(LastMeetingWeekDay), "other", LastMeetingWeekDay)) %>%
select(-LastMeeting)
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(DifferenceTraveltoFirstMeeting = as.numeric(DifferenceTraveltoFirstMeeting))
finDat_test <- finDat_test %>% mutate(DifferenceTraveltoFirstMeeting = as.numeric(DifferenceTraveltoFirstMeeting))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(DifferenceTraveltoLastMeeting = as.numeric(DifferenceTraveltoLastMeeting))
finDat_test <- finDat_test %>% mutate(DifferenceTraveltoLastMeeting = as.numeric(DifferenceTraveltoLastMeeting))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(SchoolGradeTypeLow = ifelse(SchoolGradeTypeLow %in% c(NA, "NA", "Undefined"), NA, SchoolGradeTypeLow))
finDat_test <- finDat_test %>% mutate(SchoolGradeTypeLow = ifelse(SchoolGradeTypeLow %in% c(NA, "NA", "Undefined"), NA, SchoolGradeTypeLow))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(SchoolGradeTypeHigh = ifelse(SchoolGradeTypeHigh %in% c(NA, "NA", "Undefined"), NA, SchoolGradeTypeHigh))
finDat_test <- finDat_test %>% mutate(SchoolGradeTypeHigh = ifelse(SchoolGradeTypeHigh %in% c(NA, "NA", "Undefined"), NA, SchoolGradeTypeHigh))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(SchoolGradeType = ifelse(SchoolGradeType == "Undefined->Undefined", NA, SchoolGradeType))
finDat_test <- finDat_test %>% mutate(SchoolGradeType = ifelse(SchoolGradeType == "Undefined->Undefined", NA, SchoolGradeType))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat <- finDat %>%
mutate(depositToDeparture = (lubridate::mdy(Departure_Date) - lubridate::mdy(Deposit_Date)) %>% as.character() %>% as.numeric()) %>%
select(-c(Deposit_Date, Departure_Date))
finDat_test <- finDat_test %>%
mutate(depositToDeparture = (lubridate::mdy(Departure_Date) - lubridate::mdy(Deposit_Date)) %>% as.character() %>% as.numeric()) %>%
select(-c(Deposit_Date, Departure_Date))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(Special_Pay = ifelse(Special_Pay %in% c("CP", "FR", "SA"), Special_Pay, "other"))
finDat_test <- finDat_test %>% mutate(Special_Pay = ifelse(Special_Pay %in% c("CP", "FR", "SA"), Special_Pay, "other"))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(Tuition = as.numeric(Tuition))
finDat_test <- finDat_test %>% mutate(Tuition = as.numeric(Tuition))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(avePrice = as.numeric(SPR_Group_Revenue)/Total_Pax)
finDat_test <- finDat_test %>% mutate(avePrice = as.numeric(SPR_Group_Revenue)/Total_Pax)
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(FRP_Active = as.numeric(FRP_Active))
finDat_test <- finDat_test %>% mutate(FRP_Active = as.numeric(FRP_Active))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(FRP_Cancelled = as.numeric(FRP_Cancelled))
finDat_test <- finDat_test %>% mutate(FRP_Cancelled = as.numeric(FRP_Cancelled))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(FRP_Take_up_percent_ = gsub(FRP_Take_up_percent_, pattern = ",", replacement = ".") %>% as.numeric())
finDat_test <- finDat_test %>% mutate(FRP_Take_up_percent_ = gsub(FRP_Take_up_percent_, pattern = ",", replacement = ".") %>% as.numeric())
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(EZ_Pay_Take_Up_Rate = gsub(EZ_Pay_Take_Up_Rate, pattern = ",", replacement = ".") %>% as.numeric())
finDat_test <- finDat_test %>% mutate(EZ_Pay_Take_Up_Rate = gsub(EZ_Pay_Take_Up_Rate, pattern = ",", replacement = ".") %>% as.numeric())
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(School_Sponsor = if_else(is.na(School_Sponsor), "0", School_Sponsor))
finDat_test <- finDat_test %>% mutate(School_Sponsor = if_else(is.na(School_Sponsor), "0", School_Sponsor))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(SPR_Group_Revenue = as.numeric(SPR_Group_Revenue))
finDat_test <- finDat_test %>% mutate(SPR_Group_Revenue = as.numeric(SPR_Group_Revenue))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(FPP_to_PAX = gsub(FPP_to_PAX, pattern = ",", replacement = ".") %>% as.numeric())
finDat_test <- finDat_test %>% mutate(FPP_to_PAX = gsub(FPP_to_PAX, pattern = ",", replacement = ".") %>% as.numeric())
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(FPP_to_PAX = if_else(is.na(FPP_to_PAX) & Total_Pax > 0 & !is.na(Total_Pax), FPP/Total_Pax, FPP_to_PAX))
finDat_test <- finDat_test %>% mutate(FPP_to_PAX = if_else(is.na(FPP_to_PAX) & Total_Pax > 0 & !is.na(Total_Pax), FPP/Total_Pax, FPP_to_PAX))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(Num_of_Non_FPP_PAX = as.numeric(Num_of_Non_FPP_PAX))
finDat_test <- finDat_test %>% mutate(Num_of_Non_FPP_PAX = as.numeric(Num_of_Non_FPP_PAX))
## ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat %>% mutate(pol_med = as.numeric(pol_med),
pol_med = ifelse(is.na(pol_med), 0, pol_med))
finDat_test <- finDat_test %>% mutate(pol_med = as.numeric(pol_med),
pol_med = ifelse(is.na(pol_med), 0, pol_med))
## ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(sent_med = as.numeric(sent_med),
sent_med = ifelse(is.na(sent_med), 0, sent_med))
finDat_test <- finDat_test %>% mutate(sent_med = as.numeric(sent_med),
sent_med = ifelse(is.na(sent_med), 0, sent_med))
## ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(sub_med = as.numeric(sub_med),
sub_med = ifelse(is.na(sub_med), 0, sub_med))
finDat_test <- finDat_test %>% mutate(sub_med = as.numeric(sub_med),
sub_med = ifelse(is.na(sub_med), 0, sub_med))
## ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(twl_med = as.numeric(twl_med),
twl_med = ifelse(is.na(twl_med), 0, twl_med))
finDat_test <- finDat_test %>% mutate(twl_med = as.numeric(twl_med),
twl_med = ifelse(is.na(twl_med), 0, twl_med))
## ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% mutate(numTweets = as.numeric(numTweets),
numTweets = ifelse(is.na(numTweets), 0, numTweets))
finDat_test <- finDat_test %>% mutate(numTweets = as.numeric(numTweets),
numTweets = ifelse(is.na(numTweets), 0, numTweets))
## ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% select(-c(Total_Discount_Pax, Num_of_Non_FPP_PAX))
finDat_test <- finDat_test %>% select(-c(Total_Discount_Pax, Num_of_Non_FPP_PAX))
## ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat      <- finDat      %>% select(-c(FPP, Tuition, To_Grade, Cancelled_Pax, FRP_Active))
finDat_test <- finDat_test %>% select(-c(FPP, Tuition, To_Grade, Cancelled_Pax, FRP_Active))
## ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
nzv         <- caret::nearZeroVar(finDat, saveMetrics = TRUE) %>% filter(zeroVar == TRUE | nzv == TRUE)
finDat      <- finDat      %>% select(-c(rownames(nzv)))
finDat_test <- finDat_test %>% select(-c(rownames(nzv)))
rm(nzv)
## ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
finDat <- finDat %>%
mutate_if(.predicate = is.character,
.funs = function(x) { x[is.na(x)] <- "other"; return(x)})
finDat_test <- finDat_test %>%
mutate_if(.predicate = is.character,
.funs = function(x) { x[is.na(x)] <- "other"; return(x)})
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
set.seed(2020)
splitIndex <- createDataPartition(finDat$Retained_class, p = .75, list  = FALSE, times = 1)
trainDF <- finDat[splitIndex,  ]
testDF  <- finDat[-splitIndex, ]
rm(splitIndex, finDat)
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
trainDF_targ <- trainDF %>% select(Retained)
trainDF      <- trainDF %>% select(-Retained)
trainDF_cat  <- trainDF %>% select_if(is.character)
trainDF_num  <- trainDF %>% select_if(is.numeric)
nb_pca      <- missMDA::estim_ncpPCA(trainDF_num, ncp.max = 5)
resMI_pca   <- missMDA::MIPCA(trainDF_num,        ncp = ifelse(nb_pca$ncp==0, names(which(nb_pca$criterion == min(nb_pca$criterion))) %>% as.numeric(), nb_pca$ncp))
trainDF_num <- resMI_pca$res.imputePCA %>% as_tibble()
trainDF <- bind_cols(trainDF_targ, trainDF_cat, trainDF_num)
trainDF <- trainDF %>% mutate(MDR_High_Grade_Class = if_else(MDR_High_Grade <= 8, "lower", "higher"))
rm(nb_pca, resMI_pca, trainDF_targ, trainDF_cat, trainDF_num)
testDF_targ <- testDF %>% select(Retained)
testDF      <- testDF %>% select(-Retained)
testDF_cat  <- testDF %>% select_if(is.character)
testDF_num  <- testDF %>% select_if(is.numeric)
nb_pca     <- missMDA::estim_ncpPCA(testDF_num, ncp.max = 5)
resMI_pca  <- missMDA::MIPCA(testDF_num,        ncp = nb_pca$ncp)
testDF_num <- resMI_pca$res.imputePCA %>% as_tibble()
testDF <- bind_cols(testDF_targ, testDF_cat, testDF_num)
testDF <- testDF %>% mutate(MDR_High_Grade_Class = if_else(MDR_High_Grade <= 8, "lower", "higher"))
rm(nb_pca, resMI_pca, testDF_targ, testDF_cat, testDF_num)
finDat_test_targ <- finDat_test %>% select(Retained)
finDat_test      <- finDat_test %>% select(-Retained)
finDat_test_cat  <- finDat_test %>% select_if(is.character)
finDat_test_num  <- finDat_test %>% select_if(is.numeric)
nb_pca     <- missMDA::estim_ncpPCA(finDat_test_num, ncp.max = 5)
resMI_pca  <- missMDA::MIPCA(finDat_test_num,        ncp = ifelse(nb_pca$ncp==0, names(which(nb_pca$criterion == min(nb_pca$criterion))) %>% as.numeric(), nb_pca$ncp))
finDat_test_num <- resMI_pca$res.imputePCA %>% as_tibble()
finDat_test <- bind_cols(finDat_test_targ, finDat_test_cat, finDat_test_num)
finDat_test <- finDat_test %>% mutate(MDR_High_Grade_Class = if_else(MDR_High_Grade <= 8, "lower", "higher"))
rm(nb_pca, resMI_pca, finDat_test_targ, finDat_test_cat, finDat_test_num)
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
c(names(trainDF)[colSums(is.na(trainDF)) > 0], names(testDF)[colSums(is.na(testDF)) > 0])
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
c(names(trainDF)[colSums(is.na(trainDF)) > 0], names(testDF)[colSums(is.na(testDF)) > 0], names(finDat_test)[colSums(is.na(finDat_test)) > 0])
formFeats  <- names(trainDF)[!(names(trainDF) %in% c("ID_SALES", "Retained", "Retained_class"))]
modFormula <- formula(paste0("Retained_class ~ ", paste0(formFeats, collapse = " + ")))
blueprint <- recipes::recipe(modFormula, data = trainDF) %>% recipes::step_scale(recipes::all_numeric())
# Create training & test sets for h2o
train_h2o <- recipes::prep(blueprint, training = trainDF, retain = TRUE) %>%
recipes::juice() %>%
h2o::as.h2o(destination_frame = "train_h2o")
test_h2o <- recipes::prep(blueprint, training = trainDF) %>%
recipes::bake(new_data = testDF) %>%
h2o::as.h2o(destination_frame = "test_h2o")
finTest <- recipes::prep(blueprint, training = trainDF) %>%
recipes::bake(new_data = finDat_test) %>%
h2o::as.h2o(destination_frame = "fin_test_h2o")
trainDF <- trainDF %>%
mutate(pred       = h2o::h2o.predict(object = finMod, newdata = train_h2o) %>% as_tibble() %>% pull(yes),
pred_class = ifelse(pred >= finThresh, "yes", "no"))
testDF <- testDF %>%
mutate(pred          = h2o::h2o.predict(object = finMod, newdata = test_h2o) %>% as_tibble() %>% pull(yes),
pred_class    = ifelse(pred >= finThresh, "yes", "no"))
finDat_test <- finDat_test %>%
mutate(pred          = h2o::h2o.predict(object = finMod, newdata = finTest) %>% as_tibble() %>% pull(yes),
pred_class    = ifelse(pred >= finThresh, "yes", "no"))
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
twiter_test <- readr::read_csv("0_data/test_data/twitter_test.csv", col_types = cols(.default = "c"))
ii <- 33 # 146
finDat_test$ID_SALES[ii]
finDat_test$pred[ii]
finDat_test$sent_med[ii]
twiter_test$text[twiter_test$ID_SALES == finDat_test$ID_SALES[[ii]]]
finDat_test$pred[ii]
prevRes <- read.csv("0_data/test_data/twitter_test.csv")
prevRes <- read.csv("2_output/1_data/finalTestPred.csv")
prevRes
ConfusionMatrix(prevRes$pred_class, finDat_test$pred_class)
F1_Score(prevRes$pred_class, finDat_test$pred_class, positive = "yes")
prevRes %>% select(ID_SALES, pred_class) %>% rename(pred_class_old = pred_class)
AllRes <- finDat_test %>% left_join((prevRes %>% select(ID_SALES, pred_class) %>% rename(pred_class_old = pred_class)))
AllRes %>% filter(pred_class_old != pred_class)
AllRes %>% filter(pred_class_old != pred_class) %>% select(ID_SALES)
AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% select(ID_SALES)
finDat_test$pred %>% mean()
write.csv(x = finDat_test %>% select(ID_SALES, pred_class), file = "2_output/1_data/TestPredictions.csv", row.names = FALSE)
twiter_test$text[twiter_test$ID_SALES %in% twiter_test$text[twiter_test$ID_SALES == finDat_test$ID_SALES[[ii]]]]
twiter_test$text[twiter_test$ID_SALES %in% AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% select(ID_SALES)]
twiter_test$text[twiter_test$ID_SALES %in% (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% select(ID_SALES))]
AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% select(ID_SALES)
twiter_test$text[twiter_test$ID_SALES %in% (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))]
twiter_test$text[twiter_test$ID_SALES %in% (AllRes %>% filter(pred_class_old != pred_class, pred_class == "no") %>% pull(ID_SALES))]
AllRes %>% filter(pred_class_old != pred_class, pred_class == "no") %>% pull(ID_SALES)[1]
AllRes %>% filter(pred_class_old != pred_class, pred_class == "no") %>% pull(ID_SALES)[[1]]
(AllRes %>% filter(pred_class_old != pred_class, pred_class == "no") %>% pull(ID_SALES))[[1]]
(AllRes %>% filter(pred_class_old != pred_class, pred_class == "no") %>% pull(ID_SALES))[1]
twiter_test$text[twiter_test$ID_SALES %in% (AllRes %>% filter(pred_class_old != pred_class, pred_class == "no") %>% pull(ID_SALES))[1]]
twiter_test$text[twiter_test$ID_SALES %in% (AllRes %>% filter(pred_class_old != pred_class, pred_class == "no") %>% pull(ID_SALES))[ii]]
(AllRes %>% filter(pred_class_old != pred_class, pred_class == "no") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ((AllRes %>% filter(pred_class_old != pred_class, pred_class == "no") %>% pull(ID_SALES))[ii])]
(AllRes %>% filter(pred_class_old != pred_class, pred_class == "no") %>% pull(ID_SALES))[ii]
(AllRes %>% filter(pred_class_old != pred_class, pred_class == "no") %>% pull(ID_SALES))[[ii]]
ii
ii <- 1
twiter_test$text[twiter_test$ID_SALES %in% ((AllRes %>% filter(pred_class_old != pred_class, pred_class == "no") %>% pull(ID_SALES))[ii])]
(AllRes %>% filter(pred_class_old != pred_class, pred_class == "no") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "no") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 2
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "no") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 3
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "no") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 1
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 2
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 3
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 4
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 5
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 6
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 8
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 9
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 10
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
finDat_test$pred %>% mean()
rbind(testDF, trainDF) %>% pull(Retained) %>% mean()
AllRes$pred_class_old %>% table()
AllRes$pred_class_old %>% table() %>% prop.table()
finMod@model$variable_importances
tst <- finMod@model$variable_importances
View(tst)
5/4
View(allModsRes)
finMod@model$cross_validation_metrics
finMod@model$cross_validation_metrics_summary
tst <- finMod@model$cross_validation_metrics_summary
View(tst)
finMod@model$training_metrics
twiter_test$text[twiter_test$ID_SALES %in% ID]
ii <- 1
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 33 # 146
finDat_test$ID_SALES[ii]
ii <- 2
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
AllRes <- finDat_test %>% left_join((prevRes %>% select(ID_SALES, pred, pred_class) %>% rename(pred_old = pred, pred_class_old = pred_class)))
finDat_test
(prevRes %>% select(ID_SALES, pred, pred_class) %>% rename(pred_old = pred, pred_class_old = pred_class))
(prevRes %>% select(ID_SALES, pred, pred_class)
prevRes %>% select(ID_SALES, pred, pred_class)
prevRes
ii <- 2
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 36 # 146
finDat_test$ID_SALES[ii]
ii <- 3
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 56 # 146
finDat_test$ID_SALES[ii]
finDat_test$pred[ii]
ii <- 4
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 5
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 6
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 7
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 8
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 9
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 10
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 11
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 12
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 13
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 14
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 15
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 16
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 17
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 18
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 19
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 20
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
ii <- 21
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 22
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 23
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 24
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES)
ii <- 25
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 26
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "yes") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "no") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 1
ID <- (AllRes %>% filter(pred_class_old != pred_class, pred_class == "no") %>% pull(ID_SALES))[ii]
twiter_test$text[twiter_test$ID_SALES %in% ID]
AllRes %>% filter(ID_SALES == ID) %>% select(ID_SALES, pred, pred_class, pol_med, sent_med)
ii <- 2
